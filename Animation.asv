clc;
clear all;
clear variables;

% Animation 
% showing 2D trajectory for nominal and the scenario (V=7.5m/s,Gam=+0.4rad)

global CL CD S m g rho	
	S		=	0.017;			% Reference Area, m^2
	AR		=	0.86;			% Wing Aspect Ratio
	e		=	0.9;			% Oswald Efficiency Factor;
	m		=	0.003;			% Mass, kg
	g		=	9.8;			% Gravitational acceleration, m/s^2
	rho		=	1.225;			% Air density at Sea Level, kg/m^3	
	CLa		=	3.141592 * AR/(1 + sqrt(1 + (AR / 2)^2)); % Lift-Coefficient Slope, per rad
	CDo		=	0.02;			% Zero-Lift Drag Coefficient
	K	=	1 / (3.141592 * e * AR); % Induced Drag Factor	
	CL		=	sqrt(CDo / K);	% CL for Maximum Lift/Drag Ratio
	CD		=	CDo + K * CL^2;	% Corresponding CD
	LDmax	=	CL / CD;			% Maximum Lift/Drag Ratio
    % Corresponding Flight Path Angle, rad
	Gam_nom		=	-atan(1 / LDmax);
    
    % Corresponding Velocity, m/s (Vnom = 3.55)
	Vnom		=	sqrt((2 * m * g /(rho * S * (CL * cos(Gam_nom) - CD * sin(Gam_nom)))));
	
    Alpha	=	CL / CLa;			% Corresponding Angle of Attack, rad

  %% Animation for nominal velocity
	H		=	2;			% Initial height in meters
	R		=	0;			% Initial range in meters
	to		=	0;			% Initial time in seconds
	tf		=	6;			% Final time in seconds
	tspan	=	[to tf];
	xo		=	[Vnom;Gam_nom;H;R];
	[ta,xnom]	=	ode23('EqMotion',tspan,xo);
%% Animation for Gam = +0.4 rad
    H		=	2;			% Initial height in meters
	R		=	0;			% Initial range in meters
	to		=	0;			% Initial time in seconds
	tf		=	6;			% Final time in seconds
	tspan	=	[to tf];
    Vs      =   7.5;        % Given velocity in this scenario
    Gams    =   0.4;        % Given FPA in this scenario
	xo		=	[Vs;Gams;H;R];
	[ta,xgs]	=	ode23('EqMotion',tspan,xo);

%%   Create and save GIF

% Create a figure
figure;
hold on;

% Plot the xnom data
plot(xnom(:,4),xnom(:,3), 'k', 'DisplayName', 'xnom');

% Initialize the dot
dotHandle = plot(xgs(1,4),xgs(1,3), 'ro', 'MarkerSize', 10, 'DisplayName', 'Moving Dot');

% Set axis limits
xlim([min(xnom(:,4)), max(xnom(:,4))]);
ylim([min(xnom(:,3)), max(xnom(:,3))]);

% Add labels and legend
xlabel('Height');
ylabel('Range');
title('Animated Plot');
legend('Location', 'best');

% Create the animation
for i = 2:length(xgs)
    % Update the dot position
    set(dotHandle, 'XData', xgs(i), 'YData', ygs(i));
    drawnow;  % Force immediate update of the plot
    pause(0.05);  % Pause for a short duration (adjust as needed)
end

% Save the animation as a GIF
filename = 'animated_plot.gif';
frame = getframe(gcf);
im = frame2im(frame);
[imIndexed, map] = rgb2ind(im, 256);
imwrite(imIndexed, map, filename, 'gif', 'LoopCount', Inf, 'DelayTime', 0.05);

disp(['Animated GIF saved as "', filename, '"']);

% Clean up
hold off;



